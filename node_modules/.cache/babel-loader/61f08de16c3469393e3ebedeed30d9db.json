{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jonathangirma/code/hipster-check-spotify-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./config\";\nimport hash from \"./hash\";\nimport Player from \"./Player\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      items: {\n        name: \"\",\n        artists: [{\n          name: \"\"\n        }],\n        duration_ms: 0\n      },\n      no_data: false\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n    this.tick = this.tick.bind(this);\n  }\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n      this.getCurrentlyPlaying(_token);\n    } // set interval for polling every 5 seconds\n\n\n    this.interval = setInterval(() => this.tick(), 5000);\n  }\n\n  componentWillUnmount() {\n    // clear the interval to save resources\n    clearInterval(this.interval);\n  }\n\n  tick() {\n    if (this.state.token) {\n      this.getCurrentlyPlaying(this.state.token);\n    }\n  }\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/top/tracks\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        // Checks if the data is not empty\n        if (!data) {\n          this.setState({\n            no_data: true\n          });\n          return;\n        }\n\n        this.setState({\n          items: data.items,\n          limit: data.limit,\n          no_data: false\n          /* We need to \"reset\" the boolean, in case the\n             user does not give F5 and has opened his Spotify. */\n\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), !this.state.token && /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"btn btn--loginApp-link\",\n          href: `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`,\n          children: \"Login to Spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), this.state.token && !this.state.no_data && /*#__PURE__*/_jsxDEV(Player, {\n          item: this.state.items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), this.state.no_data && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\\"Something went wrong. :(\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jonathangirma/code/hipster-check-spotify-app/src/App.js"],"names":["React","Component","$","authEndpoint","clientId","redirectUri","scopes","hash","Player","App","constructor","state","token","items","name","artists","duration_ms","no_data","getCurrentlyPlaying","bind","tick","componentDidMount","_token","access_token","setState","interval","setInterval","componentWillUnmount","clearInterval","ajax","url","type","beforeSend","xhr","setRequestHeader","success","data","limit","render","logo","join"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./config\";\nimport hash from \"./hash\";\nimport Player from \"./Player\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      items: {\n        name: \"\",\n        artists: [{ name: \"\" }],\n        duration_ms: 0\n      },\n      no_data: false,\n    };\n\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n    this.tick = this.tick.bind(this);\n  }\n\n\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n      this.getCurrentlyPlaying(_token);\n    }\n\n    // set interval for polling every 5 seconds\n    this.interval = setInterval(() => this.tick(), 5000);\n  }\n\n  componentWillUnmount() {\n    // clear the interval to save resources\n    clearInterval(this.interval);\n  }\n\n  tick() {\n    if(this.state.token) {\n      this.getCurrentlyPlaying(this.state.token);\n    }\n  }\n\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/top/tracks\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        // Checks if the data is not empty\n        if(!data) {\n          this.setState({\n            no_data: true,\n          });\n          return;\n        }\n\n        this.setState({\n          items: data.items,\n          limit: data.limit,\n          no_data: false /* We need to \"reset\" the boolean, in case the\n                            user does not give F5 and has opened his Spotify. */\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          {!this.state.token && (\n            <a\n              className=\"btn btn--loginApp-link\"\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                \"%20\"\n              )}&response_type=token&show_dialog=true`}\n            >\n              Login to Spotify\n            </a>\n          )}\n          {this.state.token && !this.state.no_data && (\n            <Player\n              item={this.state.items}\n            />\n          )}\n          {this.state.no_data && (\n            <p>\n              \"Something went wrong. :(\"\n            </p>\n          )}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}